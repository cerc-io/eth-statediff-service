name: Publish Docker image
on:
  release:
    types: [published]
  pull_request:
jobs:
  pre_job:
    # continue-on-error: true # Uncomment once integration is finished
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v4
        with:
          # All of these options are optional, so you can remove them if you are happy with the defaults
          concurrent_skipping: "never"
          skip_after_successful_duplicate: "true"
          do_not_skip: '["workflow_dispatch", "schedule"]'
  run-tests:
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    needs: pre_job
    uses: ./.github/workflows/tests.yml
  build:
    name: Run docker build
    runs-on: ubuntu-latest
    if: |
      always() &&
      (needs.run-tests.result == 'success' || needs.run-tests.result == 'skipped') &&
      github.event_name == 'release'
    needs: run-tests
    steps:
      - uses: actions/checkout@v2
      - name: Get the version
        id: vars
        run: |
          echo ::set-output name=sha::$(echo ${GITHUB_SHA:0:7})
          echo ::set-output name=tag::$(echo ${GITHUB_REF#refs/tags/})
      - name: Run docker build
        run: make docker-build
      - name: Tag docker image
        run: docker tag cerc-io/eth-statediff-service git.vdb.to/cerc-io/eth-statediff-service/eth-statediff-service:${{steps.vars.outputs.sha}}
      - name: Tag docker image TAG
        run: docker tag git.vdb.to/cerc-io/eth-statediff-service/eth-statediff-service:${{steps.vars.outputs.sha}} git.vdb.to/cerc-io/eth-statediff-service/eth-statediff-service:${{steps.vars.outputs.tag}}
      - name: Docker Login
        run: echo ${{ secrets.GITEA_TOKEN }} | docker login https://git.vdb.to -u cerccicd --password-stdin
      - name: Docker Push
        run: docker push git.vdb.to/cerc-io/eth-statediff-service/eth-statediff-service:${{steps.vars.outputs.sha}}
#  push_to_registries:
#    name: Push Docker image to Docker Hub
#    runs-on: ubuntu-latest
#    if: |
#      always() &&
#      (needs.build.result == 'success') &&
#      github.event_name == 'release'
#    needs: build
#    steps:
#      - name: Get the version
#        id: vars
#        run: |
#          echo ::set-output name=sha::$(echo ${GITHUB_SHA:0:7})
#          echo ::set-output name=tag::$(echo ${GITHUB_REF#refs/tags/})
#      - name: Docker Login to Github Registry
#        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login https://docker.pkg.github.com -u vulcanize --password-stdin
#      - name: Docker Pull
#        run: docker pull docker.pkg.github.com/cerc-io/eth-statediff-service/eth-statediff-service:${{steps.vars.outputs.sha}}
#      - name: Docker Login to Docker Registry
#        run: echo ${{ secrets.VULCANIZEJENKINS_PAT }} | docker login -u vulcanizejenkins --password-stdin
#      - name: Tag docker image
#        run: docker tag docker.pkg.github.com/cerc-io/eth-statediff-service/eth-statediff-service:${{steps.vars.outputs.sha}} cerc-io/eth-statediff-service:${{steps.vars.outputs.tag}}
#      - name: Docker Push to Docker Hub
#        run: docker push cerc-io/eth-statediff-service:${{steps.vars.outputs.tag}}
